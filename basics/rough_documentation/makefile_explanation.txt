Wow

Make files are amazing.
They are used to automate the compilation steps

So we have the basic synatx of

target: pre-requistes
    rules/recipe to follow

Make generates the target file from the pre-req based on the rules
It tracks t=dependencies in its own
$^ can be used to represent the prereq files
$@ for the target files

We add flags to it and stuff

we can have a clean rule
clean :
    rm *.o
    
    # here it removes all the object files

to make makefile not confuse clean not to run when a clean file exists in the directory 
we can make it a phine target

.PHONY : clean
clean:
    rm *.o



"%.o: %.c" means that any file ending in .o depends on the same filename ending in .c to be present.

# Sometimes "Nothing to be done for all" error can be caused by spaces 
# before command in makefile rule instead of tab. Please ensure that you use tabs instead of spaces inside of your rules.